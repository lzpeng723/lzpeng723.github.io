import{_ as o,a as c,c as i,b as l}from"./create-menu-8-C7M3Ni6u.js";import{_ as u,r,o as d,c as m,b as n,e as p,w as e,d as s,a}from"./app-U2nchfLp.js";const k="/assets/create-module-1-zrKudq3O.png",v="/assets/create-module-2-7rQpK8uG.png",g="/assets/create-module-3-1fO8hu5J.png",h="/assets/create-module-4-9EEZ7xt1.png",b="/assets/create-module-5-GpInEpNE.png",_="/assets/create-module-6-IC8NiM9d.png",y="/assets/create-module-7-4WTi0ALs.png",w="/assets/generate-code-1-zRK0SFU2.png",x="/assets/generate-code-2-SDl7Cojg.png",f="/assets/run-generator-1-epuB_TkL.png",A="/assets/run-generator-2-22sllEcP.png",S="/assets/run-controller-test-1-7U_mB3pN.png",E="/assets/mvn-compile-IHHyqaXq.png",C="/assets/run-controller-test-2-FGuCo7Xc.png",D="/assets/copy-vue-code-wkZKdheW.png",j="/assets/config-gateway-oTkDw7BS.png",q="/assets/create-menu-1-sSyQPrgM.png",B="/assets/create-menu-2-P9CtjET0.png",T="/assets/create-menu-3-ZjYUxnmK.png",M="/assets/create-menu-4-NgULFJTH.png",z="/assets/create-menu-5-FrnVb3uv.png",P="/assets/create-menu-6-RcPYZV_0.png",N="/assets/create-menu-7-QXcPIC9k.png",L="/assets/authorization-2-ATeDDcyr.png",F="/assets/logout-page-Lks868kB.png",G="/assets/test-crud-1-BH01ArM_.png",I={},O=a('<h1 id="后端手册" tabindex="-1"><a class="header-anchor" href="#后端手册" aria-hidden="true">#</a> 后端手册</h1><h2 id="项目模块" tabindex="-1"><a class="header-anchor" href="#项目模块" aria-hidden="true">#</a> 项目模块</h2><p>这里演示使用 IDEA 创建一个新的子模块</p><h3 id="新建模块" tabindex="-1"><a class="header-anchor" href="#新建模块" aria-hidden="true">#</a> 新建模块</h3><p>点击 File -&gt; New -&gt; Module...</p><p><img src="'+k+'" alt="新建模块"></p><p>点击Next</p><p><img src="'+v+'" alt="点击Next"></p><p>父模块选择 minimal-modules, 给本模块命名, 点击 Finish</p><p><img src="'+g+'" alt="选择父模块,命名子模块"></p><p>给本模块写上中文名和中文介绍,并将 minimal-system 的依赖拷贝到本模块</p><p><img src="'+h+'" alt="pom"></p><p>将 minimal-system 的配置文件 application.yml 拷贝到本模块, 并修改端口</p><p><img src="'+b+'" alt="application"></p><p>新建 Spring Boot 启动类</p><p><img src="'+_+'" alt="new class"><img src="'+y+`" alt="new class"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Demo模块 启动类
 * <span class="token keyword">@author</span> : Lzpeng
 */</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">DemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">DATABASE</span> <span class="token identifier"><span class="token punctuation">\`</span>你的模块名<span class="token punctuation">\`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="新增实体" tabindex="-1"><a class="header-anchor" href="#新增实体" aria-hidden="true">#</a> 新增实体</h3>`,20),R=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,"实体类必须放到 .domain.entity 包下")],-1),J=a(`<p>新增实体 DemoEntity</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>common<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Excel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>common<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GenerateCode</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>common<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">BaseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiModelProperty</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">EqualsAndHashCode</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">ToString</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">DynamicInsert</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">DynamicUpdate</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Column</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotBlank</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">Size</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> : Lzpeng
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">&quot;测试实体&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@DynamicInsert</span>
<span class="token annotation punctuation">@DynamicUpdate</span>
<span class="token annotation punctuation">@ToString</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EqualsAndHashCode</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GenerateCode</span><span class="token punctuation">(</span>editPage <span class="token operator">=</span> <span class="token class-name">GenerateCode<span class="token punctuation">.</span>PageType</span><span class="token punctuation">.</span><span class="token constant">DIALOG</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoEntity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 名称
     */</span>
    <span class="token annotation punctuation">@NotBlank</span>
    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;名称&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;名称&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>columnDefinition <span class="token operator">=</span> <span class="token string">&quot;varchar(255) COMMENT &#39;名称&#39;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 编码
     */</span>
    <span class="token annotation punctuation">@Size</span><span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;编码必须为6-16位之间&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;编码&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>columnDefinition <span class="token operator">=</span> <span class="token string">&quot;varchar(255) COMMENT &#39;编码&#39;&quot;</span><span class="token punctuation">,</span> unique <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> number<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成代码" tabindex="-1"><a class="header-anchor" href="#生成代码" aria-hidden="true">#</a> 生成代码</h3><p>在 DemoApplication 类上按 Alt + Enter 选择 Create Test</p><p><img src="`+w+'" alt="new generate"></p><p><img src="'+x+`" alt="new generate"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>generate<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">AbstractCodeGenerator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lzpeng<span class="token punctuation">.</span>minimal<span class="token punctuation">.</span>generate<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">JpaCodeGenerator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> : Lzpeng
 */</span>
<span class="token keyword">class</span> <span class="token class-name">DemoApplicationTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testGenFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">AbstractCodeGenerator</span> generator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JpaCodeGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        generator<span class="token punctuation">.</span><span class="token function">generateAllCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行测试用例,生成代码</p><p><img src="`+f+'" alt="run-generator"></p><p>运行完毕后会生成 Controller, Service, Dao, 测试用例和前端页面,如下图所示</p><p><img src="'+A+'" alt="run-generator"></p><p>运行测试用例</p><p><img src="'+S+'" alt="run-controller-test"></p><p>可能会出现 <code>nested exception is java.lang.IllegalArgumentException: Did not find a query class com.lzpeng.minimal.demo.domain.entity.QDemoEntity for domain class com.lzpeng.minimal.demo.domain.entity.DemoEntity!</code>,是因为没有生成QueryDSL的类, 可以<code>mvn compile</code>一下。</p><p><img src="'+E+'" alt="mvn-compile"></p><p>再次运行测试用例就会运行成功,说明后端代码没有问题</p><p><img src="'+C+'" alt="run-controller-test"></p><p>将生成的前端文件放置前端项目中</p><p><img src="'+D+`" alt="copy-vue-code"></p><p>在网关模块配置文件(./minimal-gateway/src/main/resources/application-gateway.yml)添加如下配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> minimal<span class="token punctuation">-</span>demo
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//minimal<span class="token punctuation">-</span>demo
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/demo/<span class="token important">**</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),H=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,"注意缩进空格(TAB),缩进不对会导致项目启动失败")],-1),U=n("p",null,"配置完成之后如下图所示",-1),Q=n("p",null,[n("img",{src:j,alt:"config-gateway"})],-1),V=n("h3",{id:"发布菜单",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#发布菜单","aria-hidden":"true"},"#"),s(" 发布菜单")],-1),K=n("p",null,"启动 Nacos, Sentinel, Zipkin",-1),Z=a('<p><img src="'+o+'" alt="登录页面"></p><p><img src="'+c+'" alt="首页"> 选择 系统管理 -&gt; 菜单管理 -&gt; 新增菜单</p><p>新增菜单组</p><p><img src="'+q+'" alt="新增菜单组"></p><p><img src="'+B+'" alt="新增菜单组"></p><p>新增菜单项</p><p><img src="'+T+'" alt="新增菜单项"></p><p><img src="'+M+'" alt="新增菜单项"></p><p><img src="'+z+'" alt="新增菜单项"></p><p>新增权限项</p><p><img src="'+P+'" alt="新增权限项"></p><p><img src="'+N+'" alt="新增权限项"></p><p>最终效果:</p><p><img src="'+i+'" alt="新增权限项"></p><p>分配权限</p><p><img src="'+l+'" alt="分配权限"></p><p><img src="'+L+'" alt="分配权限"></p><p>退出系统,重新登录,测试新模块</p><p><img src="'+F+'" alt="退出登录"></p><p>测试增删改查均无问题</p><p><img src="'+G+'" alt="测试新模块"></p><h2 id="权限控制" tabindex="-1"><a class="header-anchor" href="#权限控制" aria-hidden="true">#</a> 权限控制</h2><p>权限控制采用Spring Security,待补充</p><h3 id="权限控制-1" tabindex="-1"><a class="header-anchor" href="#权限控制-1" aria-hidden="true">#</a> 权限控制</h3><p>权限控制采用Spring Security,待补充</p><h3 id="数据交互" tabindex="-1"><a class="header-anchor" href="#数据交互" aria-hidden="true">#</a> 数据交互</h3><p>权限控制采用Spring Security,待补充</p><h3 id="权限注解" tabindex="-1"><a class="header-anchor" href="#权限注解" aria-hidden="true">#</a> 权限注解</h3><p>权限控制采用Spring Security,待补充</p><h3 id="接口放行" tabindex="-1"><a class="header-anchor" href="#接口放行" aria-hidden="true">#</a> 接口放行</h3><p>权限控制采用Spring Security,待补充</p><h2 id="通用查询" tabindex="-1"><a class="header-anchor" href="#通用查询" aria-hidden="true">#</a> 通用查询</h2><p>ORM框架采用Spring Data JPA,待补充</p><h3 id="jpa查询" tabindex="-1"><a class="header-anchor" href="#jpa查询" aria-hidden="true">#</a> JPA查询</h3><p>ORM框架采用Spring Data JPA,待补充</p><h3 id="query-dsl查询" tabindex="-1"><a class="header-anchor" href="#query-dsl查询" aria-hidden="true">#</a> Query DSL查询</h3><p>ORM框架采用Spring Data JPA,待补充</p><h2 id="系统缓存" tabindex="-1"><a class="header-anchor" href="#系统缓存" aria-hidden="true">#</a> 系统缓存</h2><p>缓存采用Spring Cache,待补充</p><h3 id="配置缓存" tabindex="-1"><a class="header-anchor" href="#配置缓存" aria-hidden="true">#</a> 配置缓存</h3><p>缓存采用Spring Cache,待补充</p><h3 id="缓存注解" tabindex="-1"><a class="header-anchor" href="#缓存注解" aria-hidden="true">#</a> 缓存注解</h3><p>缓存采用Spring Cache,待补充</p><h3 id="使用建议" tabindex="-1"><a class="header-anchor" href="#使用建议" aria-hidden="true">#</a> 使用建议</h3><p>缓存采用Spring Cache,待补充</p>',45);function $(X,W){const t=r("RouterLink");return d(),m("div",null,[O,R,J,H,U,Q,V,K,n("p",null,[p(t,{to:"/docs/minimal-cloud/img/guide/quick-start.html#%E5%90%8E%E7%AB%AF%E8%BF%90%E8%A1%8Cidea"},{default:e(()=>[s("启动所有微服务")]),_:1}),s("和"),p(t,{to:"/docs/minimal-cloud/img/guide/quick-start.html#%E5%89%8D%E7%AB%AF%E8%BF%90%E8%A1%8Cwebstorm"},{default:e(()=>[s("前端项目")]),_:1}),s(",然后使用系统管理员登录系统")]),Z])}const sn=u(I,[["render",$],["__file","java-development-book.html.vue"]]);export{sn as default};
