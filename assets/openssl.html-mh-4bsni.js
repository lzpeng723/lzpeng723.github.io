import{_ as r,r as t,o as a,c as s,b as e,d as o,e as i,a as c}from"./app-CTlNizBn.js";const l={},d=e("h2",{id:"openssl-生成证书",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#openssl-生成证书","aria-hidden":"true"},"#"),o(" OpenSSL 生成证书")],-1),p=e("h2",{id:"openssl-下载",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#openssl-下载","aria-hidden":"true"},"#"),o(" OpenSSL 下载")],-1),h=e("p",null,"步骤：",-1),g={href:"http://slproweb.com/products/Win32OpenSSL.html",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"D:\\Program Files\\OpenSSL-Win64",-1),S=e("li",null,[o("配置环境变量 在环境变量中添加环境变量 变量名： "),e("code",null,"OPENSSL_HOME "),o(",变量值："),e("code",null,"D:\\Program Files\\OpenSSL-Win64"),o(" 变量值为 OpenSSL 安装位置） 在"),e("code",null,"Path"),o(" 变量结尾添加如下 "),e("code",null,"%OPENSSL_HOME%\\bin;")],-1),u=c('<h2 id="生成证书" tabindex="-1"><a class="header-anchor" href="#生成证书" aria-hidden="true">#</a> 生成证书</h2><ol><li><p>创建私钥 在命令行中执行命令： <code>openssl genrsa -des3 -out integrator.key 1024</code>（integrator文件名可以自定义） 输入密码后，再次重复输入确认密码。记住此密码，后面会用到。</p></li><li><p>创建csr证书 在命令行中执行命令：<code>openssl req -new -key integrator.key -out integrator.csr</code>（key文件为刚才生成的文件，integrator为自定义文件名）</p><p>会提示输入server.key的密码</p><p>开始输入Country Name：CN</p><p>State or Province Name：SH</p><p>Locality Name：shanghai</p><p>Organization Name：这个可以忽略</p><p>Organizational Unit Name：这个可以忽略</p><p>Common Name：这个可以忽略</p><p>Email Address：填写一个非QQ的邮箱地址</p><p>以上步骤完成后，ssl文件夹内出现两个文件</p></li><li><p>去除密码。 在加载SSL支持的Nginx并使用上述私钥时除去必须的口令，否则会在启动nginx的时候需要输入密码。 复制<code>integrator.key</code>并重命名为<code>integrator.key.org</code> 可以使用此命令行，也可以使用鼠标操作 <code>copy integrator.key integrator.key.org</code> 去除口令，在命令行中执行此命令： <code>openssl rsa -in integrator.key.org -out integrator.key</code> （integrator为自定义文件名）</p></li><li><p>生成crt证书 在命令行中执行此命令： <code>openssl x509 -req -days 3650 -in integrator.csr -signkey integrator.key -out integrator.crt</code> （integrator为自定义文件名） 证书生成完毕，ssl文件夹中一共生成如下4个文件，我们需要使用到的是<code>integrator.crt</code>和<code>integrator.key</code>。</p></li></ol>',2);function m(k,y){const n=t("ExternalLinkIcon");return a(),s("div",null,[d,p,h,e("ol",null,[e("li",null,[o("安装 OpenSSL 下载地址："),e("a",g,[o("http://slproweb.com/products/Win32OpenSSL.html"),i(n)]),o(" （根据系统选择32位或者64位版本下载安装）。 下载完成后，进行安装，我安装在了 "),_,o("文件夹中。")]),S]),u])}const N=r(l,[["render",m],["__file","openssl.html.vue"]]);export{N as default};
