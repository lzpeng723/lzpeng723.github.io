(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{632:function(e,t,a){"use strict";a.r(t);var s=a(10),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"docker-swarm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm"}},[e._v("#")]),e._v(" Docker Swarm")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/swarm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Swarm"),a("OutboundLink")],1),e._v(" 和 Docker Compose 一样，都是 Docker 官方容器编排项目，但不同的是，Docker Compose 是一个在单个服务器或主机上创建多个容器的工具，而 Docker Swarm 则可以在多个服务器或主机上创建容器集群服务，对于微服务的部署，显然 Docker Swarm 会更加适合。")]),e._v(" "),a("p",[e._v("从 Docker 1.12.0 版本开始，Docker Swarm 已经包含在 Docker 引擎中（"),a("code",[e._v("docker swarm")]),e._v("），并且已经内置了服务发现工具，我们就不需要像之前一样，再配置 Etcd 或者 Consul 来进行服务发现配置了。")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[e._v("注： 若是winows系统，本章节命令必须在管理员下运行")])]),a("h2",{attrs:{id:"_1-docker-machine-创建-docker-主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-machine-创建-docker-主机"}},[e._v("#")]),e._v(" 1. Docker Machine 创建 Docker 主机")]),e._v(" "),a("p",[e._v("在进行 Docker Swarm 配置之前，我们还需要说下 Docker 另外一个官方工具 Docker Machine，其作用就是快速帮助我们搭建 Docker 主机环境，比如我们要使用 Docker Swarm，就必须有很多的 Docker 主机来进行操作，Docker Machine 就是最理想的工具。")]),e._v(" "),a("p",[e._v("首先进行"),a("RouterLink",{attrs:{to:"/blogs/Docker/docker-machine.html"}},[e._v("安装 Docker Machine")]),e._v("。")],1),e._v(" "),a("p",[e._v("我们先使用 Docker Machine 创建四个 Docker 主机，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-machine create --driver hyperv --hyperv-virtual-switch=docker manager1 && \\\ndocker-machine create --driver hyperv --hyperv-virtual-switch=docker manager2 && \\\ndocker-machine create --driver hyperv --hyperv-virtual-switch=docker worker1 && \\\ndocker-machine create --driver hyperv --hyperv-virtual-switch=docker worker2\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("执行上面命令，你会发现速度巨慢（如上），原因是从 GitHub 上下载一个"),a("code",[e._v("boot2docker.iso")]),e._v("文件（国内网络没办法），怎么解决呢？很简单，我们使用翻X的浏览器手动下载"),a("code",[e._v("boot2docker.iso")]),e._v("文件，然后拷贝到对应目录下（我电脑的目录"),a("code",[e._v("C:/Users/ThinkPad/.docker/machine/cache")]),e._v("），然后再执行上面的命令，发现速度快的一批。")]),e._v(" "),a("p",[e._v("我们可以查看下创建的 Docker 主机信息，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-machine ls\nNAME       ACTIVE   DRIVER   STATE     URL                       SWARM   DOCKER      ERRORS\nmanager1   -        hyperv   Running   tcp://192.168.1.10:2376           v19.03.12\nmanager2   -        hyperv   Running   tcp://192.168.1.11:2376           v19.03.12\nworker1    -        hyperv   Running   tcp://192.168.1.12:2376           v19.03.12\nworker2    -        hyperv   Running   tcp://192.168.1.13:2376           v19.03.12\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("可以看到，我们创建了四个 Docker 主机（两个 Manager 和两个 Worker），我们还可以连接到任何一台服务器进行操作，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-machine ssh manager1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"可能遇到的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可能遇到的问题"}},[e._v("#")]),e._v(" 可能遇到的问题")]),e._v(" "),a("h4",{attrs:{id:"卡在-waiting-for-ssh-to-be-available"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在-waiting-for-ssh-to-be-available"}},[e._v("#")]),e._v(" 卡在 Waiting for SSH to be available...")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Running pre-create checks...\n(manager1) Unable to get the latest Boot2Docker ISO release version:  Get https://api.github.com/repos/boot2docker/boot2docker/releases/latest: dial tcp: lookup api.github.com: no such host\nCreating machine...\n(manager1) Unable to get the latest Boot2Docker ISO release version:  Get https://api.github.com/repos/boot2docker/boot2docker/releases/latest: dial tcp: lookup api.github.com: no such host\n(manager1) Copying D:\\wsl2\\docker\\vm\\cache\\boot2docker.iso to D:\\wsl2\\docker\\vm\\machines\\manager1\\boot2docker.iso...\n(manager1) Creating SSH key...\n(manager1) Creating VM...\n(manager1) Using switch "docker"\n(manager1) Creating VHD\n(manager1) Starting VM...\n(manager1) Waiting for host to start...\nWaiting for machine to be running, this may take a few minutes...\nDetecting operating system of created instance...\nWaiting for SSH to be available...\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("p",[e._v("解决方案见"),a("a",{attrs:{href:"https://stackoverflow.com/questions/56792664/docker-desktop-windows-10-waiting-for-ssh-to-be-available-certificate-signe",target:"_blank",rel:"noopener noreferrer"}},[e._v("StackOverflow"),a("OutboundLink")],1),e._v("\n只需要在创建虚拟机时增加参数"),a("code",[e._v("--native-ssh")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker-machine --native-ssh create --driver hyperv --hyperv-virtual-switch=docker manager1 && \\\ndocker-machine --native-ssh create --driver hyperv --hyperv-virtual-switch=docker manager2 && \\\ndocker-machine --native-ssh create --driver hyperv --hyperv-virtual-switch=docker worker1 && \\\ndocker-machine --native-ssh create --driver hyperv --hyperv-virtual-switch=docker worker2\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"_2-docker-swarm-配置集群节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-swarm-配置集群节点"}},[e._v("#")]),e._v(" 2. Docker Swarm 配置集群节点")]),e._v(" "),a("p",[e._v("我们执行下面命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker-machine ssh manager1 \"docker swarm init --advertise-addr 192.168.1.10\"\nSwarm initialized: current node (c6kj4t51l0nzoq3u29pqxiuv6) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-5irhzlufi8nmuj26f61wkuobo46t20uja1igmkbe1rsc9g1c9w-1ucldja96grjps4rxkevrwghb 192.168.1.10:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("上面是在manager1主机上，创建一个 Docker Swarm 管理节点（初始化集群的时候，会自动把当前节点设置为管理节点）。")]),e._v(" "),a("p",[e._v("接着，我们在worker1和worker2主机上，创建两个工作节点，并加入到集群中，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ docker-machine ssh worker1 "docker swarm join --token SWMTKN-1-5irhzlufi8nmuj26f61wkuobo46t20uja1igmkbe1rsc9g1c9w-1ucldja96grjps4rxkevrwghb 192.168.1.10:2377"\nThis node joined a swarm as a worker.\n\n$ docker-machine ssh worker2 "docker swarm join --token SWMTKN-1-5irhzlufi8nmuj26f61wkuobo46t20uja1igmkbe1rsc9g1c9w-1ucldja96grjps4rxkevrwghb 192.168.1.10:2377"\nThis node joined a swarm as a worker.\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("还有另外一个manager2主机，需要配置为管理节点，我们需要先在manager1主机上，获取管理节点对应的token，然后再配置为管理节点，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ docker-machine ssh manager1 "docker swarm join-token manager"\nTo add a manager to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-5irhzlufi8nmuj26f61wkuobo46t20uja1igmkbe1rsc9g1c9w-6y84dxjfk3oo38honys4sjmbr 192.168.1.10:2377\n\n$ docker-machine ssh manager2 "docker swarm join --token SWMTKN-1-5irhzlufi8nmuj26f61wkuobo46t20uja1igmkbe1rsc9g1c9w-6y84dxjfk3oo38honys4sjmbr 192.168.1.10:2377"\nThis node joined a swarm as a manager.\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("配置好之后，我们进入manager1主机内（上面的命令也可以在主机内执行），然后查看集群节点的信息，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ docker-machine ssh manager1 "docker node ls"\nID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION\nc6kj4t51l0nzoq3u29pqxiuv6 *   manager1            Ready               Active              Leader              19.03.12\naynl204ef7bwv8dwmaqfjhh12     manager2            Ready               Active              Reachable           19.03.12\nzi0z09j4mm9ny727i8btqfh92     worker1             Ready               Active                                  19.03.12\nj44vqncnpt8ztw4z379zgw5a5     worker2             Ready               Active                                  19.03.12\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("Leader表示当然集群的头，Reachable可以理解为头的候选人，头一挂掉它就顶上去了。")]),e._v(" "),a("p",[e._v("需要注意的是，我当天配置好之后，把所有的 Docker 主机都stop了，然后隔天重新start之后，出现了下面问题：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker node ls\nError response from daemon: rpc error: code = Unknown desc = The swarm does not have a leader. It's possible that too few managers are online. Make sure more than half of the managers are online.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("好像是集群节点丢失了头，相关问题："),a("a",{attrs:{href:"https://q.cnblogs.com/q/96996/",target:"_blank",rel:"noopener noreferrer"}},[e._v('如何处理 docker swarm 集群"The swarm does not have a leader"问题'),a("OutboundLink")],1),e._v("，按照文章进行解决：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker swarm init --force-new-cluster\nError response from daemon: could not choose an IP address to advertise since this system has multiple addresses on different interfaces (10.0.2.15 on eth0 and 192.168.1.10 on eth1) - specify one with --advertise-addr\n$ docker swarm init --force-new-cluster --advertise-addr 192.168.1.10\nError response from daemon: This node is not a swarm manager. Worker nodes can't be used to view or modify cluster state. Please run this command on a manager node or promote the current node to a manager.\n$ docker node ls\n# 卡死\n$ docker-machine restart manager1 \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("重启不了，一直转圈\n没办法，后来我只能删掉四个 Docker 主机，重新进行创建了。")]),e._v(" "),a("h2",{attrs:{id:"_3-docker-service-部署单个集群服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-service-部署单个集群服务"}},[e._v("#")]),e._v(" 3. Docker Service 部署单个集群服务")]),e._v(" "),a("p",[e._v("上面比较啰嗦，我们接下来正式部署集群服务，拿nginx镜像做为示例，命令（"),a("code",[e._v("docker service create")]),e._v("命令"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/service_create/",target:"_blank",rel:"noopener noreferrer"}},[e._v("详细说明"),a("OutboundLink")],1),e._v("）:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker service create --replicas 4 -p 8088:80 --name nginx nginx:alpine\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("需要注意的是，"),a("code",[e._v("--replicas 4")]),e._v("表示创建服务的实例个数（默认是一个），啥意思？比如4，就是在四个 Docker 主机上，分别创建一个nginx服务，如果是3，那就是三个 Docker 主机，或者你可以理解为 Docker 主机的个数，另外，REPLICAS会有进度显示，并且执行是异步的。")]),e._v(" "),a("p",[e._v("我们也可以手动设置实例个数，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker service scale nginx=4\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("部署好服务后，我们就可以进行查看了，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker service ls\nID                  NAME                MODE                REPLICAS            ID                  NAME                MODE                REPLICAS            IMAGE               PORTS\nucymevu7jvds        nginx               replicated          4/4                 nginx:alpine        *:8088->80/tcp\n\n$ docker service ps nginx\nID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE           ERROR               PORTS\nwikk1lrjvb62        nginx.1             nginx:alpine        manager1            Running             Running 2 minutes ago\n54a8tgw3q47y        nginx.2             nginx:alpine        worker1             Running             Running 2 minutes ago\neu4yk2n33zm4        nginx.3             nginx:alpine        worker2             Running             Running 2 minutes ago\n8bdu0zwut54q        nginx.4             nginx:alpine        manager2            Running             Running 2 minutes ago\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("我们任意使用四个 Docker 主机中的一个 IP 地址，浏览器打开："),a("a",{attrs:{href:"http://192.168.1.10:8088/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://192.168.1.10:8088/"),a("OutboundLink")],1),e._v(",即可看到nginx服务正在运行")]),e._v(" "),a("h2",{attrs:{id:"_4-集散集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-集散集群"}},[e._v("#")]),e._v(" 4. 集散集群")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker swarm leave --force\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"_5-docker-stack-部署多个集群服务-以及-gui-管理页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-stack-部署多个集群服务-以及-gui-管理页面"}},[e._v("#")]),e._v(" 5. Docker Stack 部署多个集群服务，以及 GUI 管理页面")]),e._v(" "),a("p",[e._v("docker service部署的是单个服务，我们可以使用"),a("code",[e._v("docker stack")]),e._v("进行多服务编排部署，使用的同样是"),a("code",[e._v("docker-compose.yml")]),e._v("配置文件，示例：")]),e._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"3"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" 8088"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" replicated\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("visualizer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" dockersamples/visualizer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"8080:8080"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/var/run/docker.sock:/var/run/docker.sock"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("placement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("constraints")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("node.role == manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("portainer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" portainer/portainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"9000:9000"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/var/run/docker.sock:/var/run/docker.sock"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("placement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("constraints")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("node.role == manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br")])]),a("p",[e._v("如上所示，我们总共需要部署三个服务，出了nginx服务作为示例之外，visualizer（"),a("a",{attrs:{href:"https://github.com/dockersamples/docker-swarm-visualizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方地址"),a("OutboundLink")],1),e._v("）和portainer（"),a("a",{attrs:{href:"https://portainer.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方地址"),a("OutboundLink")],1),e._v("）都是集群 GUI 管理服务。")]),e._v(" "),a("p",[e._v("部署命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker stack deploy -c docker-compose.yml deploy-demo\nCreating service deploy-demo_nginx\nCreating service deploy-demo_visualizer\nCreating service deploy-demo_portainer\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("部署成功之后，我们可以查看具体详情，命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker stack ls\nNAME                SERVICES\ndeploy-demo         3\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("查看"),a("code",[e._v("visualizer")]),e._v(" GUI 集群管理，浏览器打开："),a("a",{attrs:{href:"http://192.168.1.10:8080/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://192.168.1.10:8080/"),a("OutboundLink")],1),e._v("\n查看"),a("code",[e._v("portainer")]),e._v(" GUI 集群管理，需要先配置账号信息，浏览器打开："),a("a",{attrs:{href:"http://192.168.1.10:9000/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://192.168.1.1:9000/"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("可以看到，"),a("code",[e._v("portainer")]),e._v("比"),a("code",[e._v("visualizer")]),e._v("强大太多了，甚至我们所有的操作都可以在"),a("code",[e._v("portainer")]),e._v("上完成。")]),e._v(" "),a("h2",{attrs:{id:"_6-docker-machine、docker-swarm、docker-node、docker-service-和-docker-stack-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-docker-machine、docker-swarm、docker-node、docker-service-和-docker-stack-常用命令"}},[e._v("#")]),e._v(" 6. docker-machine、docker swarm、docker node、docker service 和 docker stack 常用命令")]),e._v(" "),a("h3",{attrs:{id:"docker-machine-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-machine-常用命令"}},[e._v("#")]),e._v(" docker-machine 常用命令")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("命令")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("说明")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine create")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("创建一个 Docker 主机（常用"),a("code",[e._v("-d virtualbox")]),e._v("）")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine ls")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看所有的 Docker 主机")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine ssh")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("SSH 到主机上执行命令")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine env")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("显示连接到某个主机需要的环境变量")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine inspect")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("输出主机更多信息")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine kill")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("停止某个主机")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine restart")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("重启某台主机")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine rm")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("删除某台主机")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine scp")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("在主机之间复制文件")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine start")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("启动一个主机")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine status")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看主机状态")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker-machine stop")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("停止一个主机")])])])]),e._v(" "),a("h3",{attrs:{id:"docker-swarm-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm-常用命令"}},[e._v("#")]),e._v(" docker swarm 常用命令")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("命令")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("说明")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker swarm init")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("初始化集群")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker swarm join-token worker")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看工作节点的 token")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker swarm join-token manager")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看管理节点的 token")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker swarm join")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("加入集群中")])])])]),e._v(" "),a("h3",{attrs:{id:"docker-node-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-node-常用命令"}},[e._v("#")]),e._v(" docker node 常用命令")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("命令")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("说明")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node ls")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看所有集群节点")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node rm")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("删除某个节点（"),a("code",[e._v("-f")]),e._v("强制删除）")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node inspect")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看节点详情")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node demote")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("节点降级，由管理节点降级为工作节点")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node promote")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("节点升级，由工作节点升级为管理节点")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node update")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("更新节点")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker node ps")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看节点中的 Task 任务")])])])]),e._v(" "),a("h3",{attrs:{id:"docker-service-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-service-常用命令"}},[e._v("#")]),e._v(" docker service 常用命令")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("命令")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("说明")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service create")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("部署服务")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service inspect")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看服务详情")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service logs")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("产看某个服务日志")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service ls")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("查看所有服务详情")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service rm")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("删除某个服务（"),a("code",[e._v("-f")]),e._v("强制删除）")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service scale")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("设置某个服务个数")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker service update")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("更新某个服务")])])])]),e._v(" "),a("h3",{attrs:{id:"docker-stack-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-stack-常用命令"}},[e._v("#")]),e._v(" docker stack 常用命令")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[e._v("命令")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("说明")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker stack deploy")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("部署新的堆栈或更新现有堆栈")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker stack ls")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("列出现有堆栈")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker stack ps")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("列出堆栈中的任务")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker stack rm")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("删除堆栈")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker stack services")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("列出堆栈中的服务")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[e._v("docker stack down")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[e._v("移除某个堆栈（不会删除数据）")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);